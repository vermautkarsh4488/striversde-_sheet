
void fxn( BinaryTreeNode<int> *root , vector<int>&temp)
{
    if(root==nullptr) return ;
    fxn(root->left,temp);
    temp.push_back(root->data);
    fxn(root->right,temp);

}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    // Write your code here

    vector<int> temp;
    fxn(root,temp);
    
      vector<int> ans;
        unordered_map<int,int> mpp;
        for (int i = 0; i < temp.size(); i++)
        {
                if(mpp.find(k-temp[i]) != mpp.end())
                {
                        ans.push_back(mpp[k-temp[i]]);
                        ans.push_back(i);
                        // return ans;
                        
                }
                mpp[temp[i]] = i;
        }
        
        if(ans.size()!=0) return true;
        else 
        return false;



}
