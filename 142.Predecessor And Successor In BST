
    void inorder(BinaryTreeNode<int>* root , vector<int> &ans){
        if(root==NULL){
            return;
        }
        inorder(root->left,ans);
        ans.push_back(root->data);
        inorder(root->right,ans);
    }
pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int val)
{
    // Write your code here.
   
  pair<int,int> res(-1,-1);
if(root ==NULL)
{
    return res;

}
 vector<int> ans;

    inorder(root,ans);

        for(int i=0; i<ans.size(); i++){
            if(val == ans[i]){
               if(i-1>=0)
               {
                   res.first = ans[i-1];
               }

               if (i + 1 < ans.size()) {
                 res.second = ans[i + 1];
               }
            }
        }

        return res;
        

}
