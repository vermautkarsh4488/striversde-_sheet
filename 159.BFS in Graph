#include <bits/stdc++.h> 
vector<int> BFS(int v, vector<pair<int, int>> edges)
{
    // Write your code here

int n = edges.size();
    vector<int> adj[v+1];
   
    
    for(auto it : edges)
    {
 adj[it.first].push_back(it.second);
            adj[it.second].push_back(it.first);
        
    }

        for(int i=0;i<v;i++)
      sort(adj[i].begin(),adj[i].end());    

 vector<int> vis(v+1,0);

    queue<int> q;

    vector<int> ans;
    for(int i = 0; i<v; i++)
    {
        if(!vis[i])
        {
         queue<int> q;
         q.push(i);
         vis[i] = 1;
         while(!q.empty())
    {
        int node = q.front();
        q.pop();
        ans.push_back(node);
        for(auto it : adj[node])
        {
          if (!vis[it]) {
            vis[it] = 1;
            q.push(it);
          }
        }
    }

        }
    
    
    
    }


    return ans;

}
