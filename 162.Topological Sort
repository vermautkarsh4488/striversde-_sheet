#include <bits/stdc++.h> 

void dfs(int node ,  vector<vector<int>> &adj , vector<bool>& vis , stack<int> &st)
{
    if(vis[node]) return ;

    vis[node] = true;

 
    for(auto it : adj[node])
    {
        if(!vis[it])
        {
            dfs(it,adj,vis,st);
        }
        

    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here

    
     vector<vector<int>> adj(v);
    for(auto edge : edges){
        adj[edge[0]].push_back(edge[1]);
    }
    vector<bool> vis(v,false);
    stack<int> st;


    for(int i = 0; i<v; i++)
    {
        if(!vis[i])
        {
            dfs(i,adj,vis,st);


        }
    }
vector<int> ans;

    while(!st.empty())
    {
        ans.push_back(st.top());
        st.pop();

    }

    return ans;
    


}
