void inorder(TreeNode *root,vector<int> &v){

    if(root== NULL){

        return;

    }

    inorder(root->left,v);

    v.push_back(root->data);

    inorder(root->right,v);

 

}
vector<int> getInOrderTraversal(TreeNode *root)

{

    // vector<int> v;

    // inorder(root , v);

    // return v;

 

    stack<TreeNode*> s;

    TreeNode *temp;

    vector<int> v;

    temp= root;

    while(true){

        if(temp!= NULL){

            s.push(temp);

            temp=temp->left;

        }

        else{

            if(s.empty() == true){

                break;

            }

            temp= s.top();

            s.pop();

            v.push_back(temp->data);

            temp= temp->right;

 

        }

 

    }

    return v;
    }
    
