
void fxn(int node , vector<int> adj[] , vector<int> &vis , vector<int>&temp)
{
    vis[node] = 1;
    temp.push_back(node);

    for(auto it : adj[node])
    {
        if(!vis[it])
        {
            fxn(it,adj,vis,temp);

        }
    }
}

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    // Write your code here

    vector<int> adj[V];

    for(int i = 0; i<edges.size(); i++)
    {
        int u = edges[i][0];
        int v = edges[i][1];
        adj[u].push_back(v);
        adj[v].push_back(u);

    }
    vector<int> vis(V,0);

    vector<vector<int>> res;

    for(int i= 0; i<V; i++)
    {
        if(!vis[i])
        {
            vector<int> temp;
            fxn(i,adj,vis,temp);
            res.push_back(temp);

        }
    }

    return res;
    

}
